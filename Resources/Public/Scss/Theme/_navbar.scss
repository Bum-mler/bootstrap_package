//
// Navbar
//
.navbar-mainnavigation {
    align-items: initial;
    position: relative;
    padding: 1rem 0;
    box-shadow: 0 1px 0 0 rgba(0,0,0,0.15);
    @each $breakpoint in map-keys($navbar-heights) {
        @include media-breakpoint-up($breakpoint) {
            min-height: map-get($navbar-heights, $breakpoint);
        }
    }
}

//
// Container
//
.navbar-container {
    @include make-container();
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
}
.navbar-boxed {
    .navbar-container {
        @include make-container-max-widths();
    }
}

//
// Position Fixed
//
.navbar-mainnavigation {
    &.navbar-fixed-top {
        @extend .fixed-top;
    }
    &.navbar-fixed-bottom {
        @extend .fixed-bottom;
    }
}
.body-bg-top {
    @each $breakpoint in map-keys($navbar-heights) {
        @include media-breakpoint-up($breakpoint) {
            padding-top: calc(#{map-get($navbar-heights, $breakpoint)} + #{($navbar-padding-y * 2)});
        }
    }
}
.body-bg-bottom {
    @each $breakpoint in map-keys($navbar-heights) {
        @include media-breakpoint-up($breakpoint) {
            padding-bottom: calc(#{map-get($navbar-heights, $breakpoint)} + #{($navbar-padding-y * 2)});
        }
    }
}
.navbar-mainnavigation[class*="navbar-fixed"] {
    max-height: 100vh;
    overflow-y: auto;
}

//
// Carousel Corrections
//
.navbar {
    ~,
    ~ .typo3-feedit-element {
        .carousel-fullscreen,
        .carousel-fullscreen .carousel-item {
            @each $breakpoint in map-keys($navbar-heights) {
                @include media-breakpoint-up($breakpoint) {
                    height: calc(100vh - (#{map-get($navbar-heights, $breakpoint)} + #{($navbar-padding-y * 2)}));
                }
            }
        }
    }

}
.navbar-fixed-top[class*="-transition"] {
    ~,
    ~ .typo3-feedit-element {
        .carousel {
            @each $breakpoint in map-keys($navbar-heights) {
                @media (min-width: $grid-float-breakpoint) and (min-width: map-get($grid-breakpoints, $breakpoint)) {
                    margin-top: calc(-1 * (#{map-get($navbar-heights, $breakpoint)} + #{($navbar-padding-y * 2)}));
                }
            }
            .carousel-item {
                @each $breakpoint in map-keys($navbar-heights) {
                    @media (min-width: $grid-float-breakpoint) and (min-width: map-get($grid-breakpoints, $breakpoint)) {
                        padding-top: calc((#{map-get($navbar-heights, $breakpoint)} + #{($navbar-padding-y * 2)}) / 2);
                    }
                }
            }
        }
        .carousel-fullscreen,
        .carousel-fullscreen .carousel-item {
            @media (min-width: $grid-float-breakpoint) {
                height: 100vh;
            }
        }
    }
}
.navbar-fixed-bottom {
    ~ {
        .carousel-fullscreen {
            margin-top: 0;
            @each $breakpoint in map-keys($navbar-heights) {
                @include media-breakpoint-up($breakpoint) {
                    height: calc(100vh - (#{map-get($navbar-heights, $breakpoint)} + #{($navbar-padding-y * 2)}));
                }
            }
        }
    }
}

//
// Brand
//
.navbar-brand {
    margin-right: $navbar-nav-link-padding-x * 2;
    display: flex;
    align-items: center;
    @each $breakpoint in map-keys($navbar-heights) {
        @include media-breakpoint-up($breakpoint) {
            height: map-get($navbar-heights, $breakpoint) - ($navbar-padding-y * 2);
        }
    }
}
.navbar-brand-image {
    padding: 0;
}
.navbar-brand-logo {
    width: auto;
    @each $breakpoint in map-keys($navbar-brand-heights) {
        @include media-breakpoint-up($breakpoint) {
            height: map-get($navbar-brand-heights, $breakpoint);
        }
    }
}
.navbar-brand-logo-normal {
    display: block;
}
.navbar-brand-logo-inverted {
    display: none;
}

//
// Breakpoint
// Bootstrap 4 only allows breakpoints to be fixed at viewports this removes
// a lot of flexibility, so we introduce the legacy float breakpoint again.
//
.navbar-mainnavigation {
    [class*="-icon"] {
        svg,
        img {
            display: block;
            margin: 0;
        }
    }
    .navbar-collapse {
        flex-grow: 0;
        flex-basis: 100%;
    }
    .navbar-nav {
        &:first-child {
            margin-top: $spacer / 2;
        }
        &:last-child {
            margin-bottom: $spacer / 2;
        }
    }
    .nav-link {
        display: flex;
        align-items: center;
        padding-left: ($grid-gutter-width / 2);
        padding-right: ($grid-gutter-width / 2);
    }
    .nav-link-icon {
        + .nav-link-text {
            margin-left: 0.5rem;
        }
    }
    .dropdown-toggle::after {
        margin-left: auto;
    }
    .dropdown-menu {
        margin: 0;
        padding: 0;
        border: none;
    }
    .dropdown-item {
        padding-left: $grid-gutter-width;
        padding-right: ($grid-gutter-width / 2);
        padding-top: $navbar-padding-y;
        padding-bottom: $navbar-padding-y;
        display: flex;
        align-items: center;
    }
    .dropdown-text {
        white-space: normal;
    }
    .dropdown-icon {
        + .dropdown-text {
            margin-left: 0.5rem;
        }
    }
}
@media (min-width: $grid-float-breakpoint) {
    .navbar-mainnavigation {
        &[class*="navbar-fixed"] {
            overflow-y: inherit
        }
        .navbar-toggler {
            display: none;
        }
        .navbar-collapse {
            width: auto;
            display: flex;
            flex-grow: 1;
            flex-basis: initial;
            justify-content: space-between;
            margin-left: -$navbar-nav-link-padding-x;
            margin-right: -$navbar-nav-link-padding-x;
        }
        .navbar-nav {
            flex-direction: row;
            align-items: center;
            margin: 0!important;
        }
        .nav-link {
            padding-left: $navbar-nav-link-padding-x;
            padding-right: $navbar-nav-link-padding-x;
        }
        .dropdown-menu {
            position: absolute;
            margin: 0;
            padding-top: $spacer / 2;
            padding-bottom: $spacer / 2;
            background-clip: unset;
            box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.1);
        }
        .dropdown-item {
            padding-left: $navbar-nav-link-padding-x;
            padding-right: $navbar-nav-link-padding-x;
        }
        .dropdown-text {
            white-space: nowrap;
        }
    }
    .navbar-nocaret {
        .dropdown-toggle::after {
            display: none;
        }
    }
}
@media (max-width: ($grid-float-breakpoint - 1)) {
    .navbar-mainnavigation {
        &[class*="navbar-inverse"] {
            a:not(.active) {
                color: $navbar-dark-color;
                @include hover-focus {
                    background: transparent;
                    color: $navbar-dark-hover-color;
                }
            }
        }
        a,
        a.active {
            background: transparent;
            @include hover-focus {
                background: transparent;
            }
        }
        .dropdown-menu {
            background-color: transparent;
        }
    }
}

//
// Toggler
//
.navbar-toggler {
    padding: 0;
    height: 2.5rem;
    width: 1.5rem;
    position: relative;
    border: 0;
    &:focus {
        outline: 0;
    }
}
.navbar-toggler-icon:after,
.navbar-toggler-icon,
.navbar-toggler-icon:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    background-image: none!important;
    display: inline-block;
    width: 1.5rem;
    height: 0.125rem;
    background-color: currentColor;
    transition: all 0.3s ease-in;
}
.navbar-toggler-icon {
    top: 50%;
    left: 50%;
    height: 0;
    transform: translate(-50%, -50%);
}
.navbar-toggler-icon:before {
    transition-delay: 0.1s;
    transform: rotate(-45deg);
    top: 0;
}
.navbar-toggler-icon:after {
    transition-delay: 0.1s;
    transform: rotate(45deg);
    top: 0;
}
.navbar-toggler.collapsed {
    .navbar-toggler-icon {
        transition-delay: 0.2s;
        height: 0.125rem;
    }
    .navbar-toggler-icon:before {
        transition-delay: 0;
        transform: rotate(0);
        top: -0.375rem;
    }
    .navbar-toggler-icon:after {
        transition-delay: 0;
        transform: rotate(0);
        top: 0.375rem;
    }
}

//
// Navigation Style
//
[class*="navbar-default"] {
    @extend .navbar-light;
    @extend .bg-white;
}
[class*="navbar-inverse"] {
    @extend .navbar-dark;
    @extend .bg-dark;
}

//
// Transision
//
[class*="-default-transition"] {
    @extend [class*="navbar-default"] ;
}
[class*="-inverse-transition"] {
    @extend [class*="navbar-inverse"];
}
.navbar-transition {
    min-height: map-get($navbar-heights, xs);
    .navbar-brand {
        height: map-get($navbar-heights, xs) - ($navbar-padding-y * 2);
    }
    .navbar-brand-logo {
        max-height: map-get($navbar-brand-heights, xs);
    }
}
@media (min-width: $grid-float-breakpoint) {
    .navbar {
        transition: all 0.27s cubic-bezier(0, 0, 0.58, 1) 0s;
    }
    [class*="-transition"]:not(.navbar-transition) {
        background: transparent !important;
        box-shadow: none;
        .navbar-nav > li {
            > .nav-link {
                color: #ffffff !important;
            }
        }
        .navbar-brand {
            > .navbar-brand-logo-normal {
                display: none;
            }
            > .navbar-brand-logo-inverted {
                display: block;
            }
        }
    }
}
